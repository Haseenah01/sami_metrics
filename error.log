08:29:07.329 [info] Running SamiMetricsWeb.Endpoint with cowboy 2.10.0 at 127.0.0.1:4093 (http)
08:29:07.334 [info] Access SamiMetricsWeb.Endpoint at http://localhost:4093
08:29:09.033 [info] CONNECTED TO Phoenix.LiveView.Socket in 95Âµs
  Transport: :websocket
  Serializer: Phoenix.Socket.V2.JSONSerializer
  Parameters: %{"_csrf_token" => "ZlQlIwAQCwMdIEk9ZxMeYAItPn1yAWQhP-ISYdBfhDdZ8vG5VNUJ775f", "vsn" => "2.0.0"}
08:30:03.265 [error] Task #PID<0.17106.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15209.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.122 [error] Task #PID<0.15041.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8047ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15213.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15218.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15224.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.122 [error] Task #PID<0.15066.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8045ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17158.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17162.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17167.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17171.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17177.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17182.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17187.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17193.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17195.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17199.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.258 [error] Task #PID<0.16845.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15228.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15230.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15207.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15211.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15234.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15236.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15178.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8023ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15200.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15181.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8023ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15191.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8018ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15261.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15247.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17120.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15264.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17122.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15267.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17116.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15270.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17133.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15268.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15273.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17139.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17143.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17146.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17150.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17155.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17205.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15277.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15279.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.255 [error] Task #PID<0.16961.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8006ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.255 [error] Task #PID<0.17064.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8006ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15237.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.253 [error] Task #PID<0.17110.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15260.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8016ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15294.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.122 [error] Task #PID<0.15042.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8047ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15043.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8047ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15202.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15206.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15089.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8022ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.123 [error] Task #PID<0.15086.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8022ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15283.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15286.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15896.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15901.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15884.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.131 [error] Task #PID<0.15631.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.131 [error] Task #PID<0.15638.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15649.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.074 [error] Task #PID<0.14516.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.074 [error] Task #PID<0.14517.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17210.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17214.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8004ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17292.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17393.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17321.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8009ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17304.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8006ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15322.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15324.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8015ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.125 [error] Task #PID<0.15328.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8014ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.126 [error] Task #PID<0.15391.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8010ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.126 [error] Task #PID<0.15405.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8010ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.126 [error] Task #PID<0.15413.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8010ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.126 [error] Task #PID<0.15421.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8010ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15345.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8013ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15550.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.124 [error] Task #PID<0.15229.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8017ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15556.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15565.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.127 [error] Task #PID<0.15426.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8009ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.127 [error] Task #PID<0.15472.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8007ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.127 [error] Task #PID<0.15357.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8007ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15346.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8013ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15348.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8013ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15349.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8013ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15351.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8013ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15352.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8013ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15353.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8013ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15354.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8012ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15606.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15528.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15533.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15636.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15651.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15569.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15573.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15582.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15598.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15892.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.129 [error] Task #PID<0.15822.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8007ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15826.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8004ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15835.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15836.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15845.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15848.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.121 [error] Task #PID<0.15087.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8036ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.121 [error] Task #PID<0.15090.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8033ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.120 [error] Task #PID<0.15071.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8040ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15716.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15731.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.132 [error] Task #PID<0.15735.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.074 [error] Task #PID<0.14518.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.074 [error] Task #PID<0.14519.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.074 [error] Task #PID<0.14520.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.044 [error] Task #PID<0.14439.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.044 [error] Task #PID<0.14489.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.044 [error] Task #PID<0.14467.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15654.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15658.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15661.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15664.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15665.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15667.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15668.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15672.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15675.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15679.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8002ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.163 [error] Task #PID<0.16258.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16566.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8011ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16574.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8011ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16534.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8008ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16539.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8008ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16542.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8008ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16546.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8008ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16550.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8008ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16555.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8007ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16562.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8007ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16571.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8007ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.180 [error] Task #PID<0.16424.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8007ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.210 [error] Task #PID<0.16754.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.210 [error] Task #PID<0.16758.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.211 [error] Task #PID<0.16717.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8001ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.254 [error] Task #PID<0.17211.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8005ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:03.130 [error] Task #PID<0.15611.1> started from #PID<0.574.0> terminating
** (DBConnection.ConnectionError) connection not available and request was dropped from queue after 8003ms. This means requests are coming in and your connection pool cannot serve them fast enough. You can address this by:

  1. Ensuring your database is available and that you can connect to it
  2. Tracking down slow queries and making sure they are running fast enough
  3. Increasing the pool_size (although this increases resource consumption)
  4. Allowing requests to wait longer by increasing :queue_target and :queue_interval

See DBConnection.start_link/2 for more information

    (ecto_sql 3.11.0) lib/ecto/adapters/sql.ex:1054: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto 3.11.0) lib/ecto/repo/schema.ex:775: Ecto.Repo.Schema.apply/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:377: anonymous fn/15 in Ecto.Repo.Schema.do_insert/4
    (ecto 3.11.0) lib/ecto/repo/schema.ex:273: Ecto.Repo.Schema.insert!/4
    (sami_metrics 0.1.0) lib/sami_metrics/peoples.ex:18: anonymous fn/1 in SamiMetrics.Peoples.insert_all_data/0
    (elixir 1.15.0) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2
    (elixir 1.15.0) lib/task/supervised.ex:36: Task.Supervised.reply/4
Function: #Function<3.62693922/0 in SamiMetrics.Peoples.insert_all_data/0>
    Args: []
08:30:04.271 [info] Postgrex.Protocol (#PID<0.420.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11063.1> exited
08:30:04.271 [info] Postgrex.Protocol (#PID<0.403.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11051.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.404.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11072.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.407.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11046.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.415.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11061.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.402.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11066.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.417.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11073.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.416.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11053.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.414.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11071.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.412.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11048.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.419.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11055.1> exited
08:30:04.272 [info] Postgrex.Protocol (#PID<0.413.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.10962.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.410.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11025.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.405.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11059.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.421.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11058.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.406.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11043.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.409.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11044.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.418.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11016.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.411.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11037.1> exited
08:30:04.273 [info] Postgrex.Protocol (#PID<0.408.0>) disconnected: ** (DBConnection.ConnectionError) client #PID<0.11024.1> exited
08:31:13.832 [info] CONNECTED TO Phoenix.LiveView.Socket in 183Âµs
  Transport: :websocket
  Serializer: Phoenix.Socket.V2.JSONSerializer
  Parameters: %{"_csrf_token" => "ZlQlIwAQCwMdIEk9ZxMeYAItPn1yAWQhP-ISYdBfhDdZ8vG5VNUJ775f", "vsn" => "2.0.0"}
08:32:16.851 [info] CONNECTED TO Phoenix.LiveView.Socket in 67Âµs
  Transport: :websocket
  Serializer: Phoenix.Socket.V2.JSONSerializer
  Parameters: %{"_csrf_token" => "ZlQlIwAQCwMdIEk9ZxMeYAItPn1yAWQhP-ISYdBfhDdZ8vG5VNUJ775f", "vsn" => "2.0.0"}
